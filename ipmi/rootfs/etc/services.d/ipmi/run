#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start sshd service if enabled
# ==============================================================================

set -eo pipefail

MQTT_HOST=$(bashio::services mqtt "host")
MQTT_USER=$(bashio::services mqtt "username")
MQTT_PASSWORD=$(bashio::services mqtt "password")
INTERVAL=$(bashio::config 'interval')
HOST=$(bashio::config 'host')
USER=$(bashio::config 'user')
PASSWORD=$(bashio::config 'password')
DISCOVERY_PREFIX=$(bashio::config 'discovery_prefix')

function ipmi_mqtt_publish() {
  local query="$1" && shift
  local args=(-n 4 -r)

  if bashio::config.true 'debug'; then
    args+=(-t)
  fi

  ipmitool -I lanplus -H "$HOST" -U "$USER" -P "$PASSWORD" -c sdr | jq --arg discovery_prefix "$DISCOVERY_PREFIX" --raw-input --raw-output "$query" | xargs ${args[@]} mosquitto_pub -h "$MQTT_HOST" -u "$MQTT_USER" -P "$MQTT_PASSWORD" "$@"
}

function discovery_config_publish() {
  local query=$(cat <<'QUERY'

    def to_object(arr):
      with_entries(.key = arr[.key]);

    def presence:
      if . == "" then null else . end;

    def parse_number:
      . as $v | try tonumber catch $v;

    split(",") |
    select(length == 4) |
    map(presence) |
    map(parse_number) |
    to_object(["name", "value", "unit", "state"]) |
    select(.value != null) |
    .id = "ipmi_" + (.name | ascii_downcase | gsub("[^a-zA-Z0-9_-]"; "_")) |
    .path = "\($discovery_prefix)/sensor/\(.id)" |
    .topic = "\(.path)/config" |
    .payload = {
      name: "IPMI \(.name)" ,
      state_topic: "\(.path)/state",
      unique_id: .id
    } |
    if .unit != null then .payload.unit_of_meas = .unit else . end |
    @sh "-t \(.topic) -m \(.payload | @json)"

QUERY
)

  ipmi_mqtt_publish "${query}" -r
}

function discovery_state_publish() {
  local query=$(cat <<'QUERY'

    def to_object(arr):
      with_entries(.key = arr[.key]);

    def presence:
      if . == "" then null else . end;

    def parse_number:
      . as $v | try tonumber catch $v;

    split(",") |
    select(length == 4) |
    map(presence) |
    map(parse_number) |
    to_object(["name", "value", "unit", "state"]) |
    select(.value != null) |
    .id = "ipmi_" + (.name | ascii_downcase | gsub("[^a-zA-Z0-9_-]"; "_")) |
    .topic = "\($discovery_prefix)/sensor/\(.id)/state" |
    @sh "-t \(.topic) -m \(.value)"

QUERY
)

  ipmi_mqtt_publish "${query}"
}

bashio::log.info "Publishing IPMI discovery config"
discovery_config_publish

while :
do
  sleep "$INTERVAL"
  discovery_state_publish
done

